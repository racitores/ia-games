{"version":3,"file":"static/js/451.f398ea6a.chunk.js","mappings":"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","sources":["apps/aprendeElReloj.js"],"sourcesContent":["// description: Aprende a leer la hora en un reloj analógico o normal de forma interactiva\n// categories: Educativo, Matemáticas, Escolar\nimport { useState, useEffect } from \"react\";\n\nexport default function ClockLearningApp() {\n  const [hour, setHour] = useState(Math.floor(Math.random() * 12) + 1);\n  const [minute, setMinute] = useState(Math.floor(Math.random() * 12) * 5);\n  const [userHour, setUserHour] = useState(\"\");\n  const [userMinute, setUserMinute] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [score, setScore] = useState(0);\n  const [totalAttempts, setTotalAttempts] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [mode, setMode] = useState(\"digital\"); // 'digital' o 'verbal'\n  const [userVerbalAnswer, setUserVerbalAnswer] = useState(\"\");\n  const [verbalOptions, setVerbalOptions] = useState([]);\n\n  // Configurar posición de las manecillas\n  const hourDegrees = hour * 30 + minute / 2;\n  const minuteDegrees = minute * 6;\n\n  // Convertir la hora actual a formato verbal\n  const getVerbalTime = (h, m) => {\n    if (m === 0) return `${h} en punto`;\n    if (m === 15) return `${h} y cuarto`;\n    if (m === 30) return `${h} y media`;\n    if (m === 45) return `${h + 1} menos cuarto`;\n\n    if (m < 30) return `${h} y ${m}`;\n    return `${h + 1} menos ${60 - m}`;\n  };\n\n  // Generar opciones para respuesta verbal\n  const generateVerbalOptions = () => {\n    const correctAnswer = getVerbalTime(hour, minute);\n    let options = [correctAnswer];\n\n    // Generar 3 opciones incorrectas\n    while (options.length < 4) {\n      let newHour = Math.floor(Math.random() * 12) + 1;\n      let newMinute = [0, 15, 30, 45][Math.floor(Math.random() * 4)];\n\n      let newOption = getVerbalTime(newHour, newMinute);\n      if (\n        !options.includes(newOption) &&\n        (newHour !== hour || newMinute !== minute)\n      ) {\n        options.push(newOption);\n      }\n    }\n\n    // Mezclar opciones\n    return options.sort(() => Math.random() - 0.5);\n  };\n\n  const checkAnswer = () => {\n    setTotalAttempts(totalAttempts + 1);\n\n    if (mode === \"digital\") {\n      if (parseInt(userHour) === hour && parseInt(userMinute) === minute) {\n        setFeedback(\"¡Correcto! ¡Muy bien!\");\n        setScore(score + 1);\n        setTimeout(newQuestion, 1500);\n      } else {\n        setFeedback(\"Intenta otra vez\");\n      }\n    } else {\n      const correctVerbal = getVerbalTime(hour, minute);\n      if (userVerbalAnswer === correctVerbal) {\n        setFeedback(\"¡Correcto! ¡Muy bien!\");\n        setScore(score + 1);\n        setTimeout(newQuestion, 1500);\n      } else {\n        setFeedback(\"Intenta otra vez\");\n      }\n    }\n  };\n\n  const showCorrectAnswer = () => {\n    setShowAnswer(true);\n    if (mode === \"digital\") {\n      setFeedback(\n        `La respuesta correcta es: ${hour}:${minute\n          .toString()\n          .padStart(2, \"0\")}`\n      );\n    } else {\n      setFeedback(`La respuesta correcta es: \"${getVerbalTime(hour, minute)}\"`);\n    }\n  };\n\n  const newQuestion = () => {\n    // Generar nueva hora según el nivel\n    let newHour = Math.floor(Math.random() * 12) + 1;\n    let newMinute = 0;\n\n    if (level === 1) {\n      // Nivel 1: Solo horas exactas (minutos = 0)\n      newMinute = 0;\n    } else if (level === 2) {\n      // Nivel 2: Horas exactas o medias horas\n      newMinute = Math.random() < 0.5 ? 0 : 30;\n    } else if (level === 3) {\n      // Nivel 3: Cualquier intervalo de 5 minutos\n      newMinute = Math.floor(Math.random() * 12) * 5;\n    } else if (level === 4) {\n      // Nivel 4: Formato verbal (cuarto, media, menos cuarto)\n      newMinute = [0, 15, 30, 45][Math.floor(Math.random() * 4)];\n    }\n\n    setHour(newHour);\n    setMinute(newMinute);\n    setUserHour(\"\");\n    setUserMinute(\"\");\n    setUserVerbalAnswer(\"\");\n    setFeedback(\"\");\n    setShowAnswer(false);\n\n    // Generar nuevas opciones verbales\n    setVerbalOptions(generateVerbalOptions());\n  };\n\n  const changeLevel = (newLevel) => {\n    setLevel(newLevel);\n    setScore(0);\n    setTotalAttempts(0);\n    setTimeout(newQuestion, 100);\n  };\n\n  const changeMode = (newMode) => {\n    setMode(newMode);\n    setScore(0);\n    setTotalAttempts(0);\n    setVerbalOptions(generateVerbalOptions());\n  };\n\n  // Efectos\n  useEffect(() => {\n    // Inicializar las opciones verbales al cargar\n    setVerbalOptions(generateVerbalOptions());\n  }, []);\n\n  // Efecto para regenerar opciones cuando cambia la hora/minuto\n  useEffect(() => {\n    if (mode === \"verbal\") {\n      setVerbalOptions(generateVerbalOptions());\n    }\n  }, [hour, minute]);\n\n  return (\n    <div className=\"flex flex-col items-center p-4 max-w-md mx-auto bg-blue-50 rounded-lg shadow-lg\">\n      <h1 className=\"text-2xl font-bold text-blue-800 mb-4\">\n        Aprende las Horas del Reloj\n      </h1>\n\n      <div className=\"mb-4 w-full\">\n        <div className=\"flex justify-center space-x-4 mb-2\">\n          <button\n            onClick={() => changeMode(\"digital\")}\n            className={`px-3 py-1 rounded ${\n              mode === \"digital\" ? \"bg-purple-500 text-white\" : \"bg-gray-200\"\n            }`}\n          >\n            Modo Digital\n          </button>\n          <button\n            onClick={() => changeMode(\"verbal\")}\n            className={`px-3 py-1 rounded ${\n              mode === \"verbal\" ? \"bg-purple-500 text-white\" : \"bg-gray-200\"\n            }`}\n          >\n            Modo Verbal\n          </button>\n        </div>\n\n        <div className=\"flex flex-wrap justify-center space-x-2 mb-2\">\n          <button\n            onClick={() => changeLevel(1)}\n            className={`px-3 py-1 rounded ${\n              level === 1 ? \"bg-blue-500 text-white\" : \"bg-gray-200\"\n            }`}\n          >\n            Nivel 1\n          </button>\n          <button\n            onClick={() => changeLevel(2)}\n            className={`px-3 py-1 rounded ${\n              level === 2 ? \"bg-blue-500 text-white\" : \"bg-gray-200\"\n            }`}\n          >\n            Nivel 2\n          </button>\n          <button\n            onClick={() => changeLevel(3)}\n            className={`px-3 py-1 rounded ${\n              level === 3 ? \"bg-blue-500 text-white\" : \"bg-gray-200\"\n            }`}\n          >\n            Nivel 3\n          </button>\n          <button\n            onClick={() => changeLevel(4)}\n            className={`px-3 py-1 rounded ${\n              level === 4 ? \"bg-blue-500 text-white\" : \"bg-gray-200\"\n            }`}\n          >\n            Nivel 4\n          </button>\n        </div>\n        <p className=\"text-sm text-gray-600 text-center\">\n          {level === 1\n            ? \"Horas exactas\"\n            : level === 2\n            ? \"Horas exactas y medias\"\n            : level === 3\n            ? \"Intervalos de 5 minutos\"\n            : \"Cuartos y medias (verbal)\"}\n        </p>\n      </div>\n\n      <div className=\"relative w-64 h-64 rounded-full bg-white border-4 border-gray-800 shadow-lg mb-6\">\n        {/* Números del reloj */}\n        {[...Array(12)].map((_, i) => {\n          const num = i + 1;\n          const angle = (num * 30 - 90) * (Math.PI / 180);\n          const x = 32 + 24 * Math.cos(angle);\n          const y = 32 + 24 * Math.sin(angle);\n\n          return (\n            <div\n              key={num}\n              className=\"absolute w-8 h-8 flex items-center justify-center text-xl font-bold\"\n              style={{\n                left: `${50 + 40 * Math.cos(angle)}%`,\n                top: `${50 + 40 * Math.sin(angle)}%`,\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              {num}\n            </div>\n          );\n        })}\n\n        {/* Marcas de minutos */}\n        {[...Array(60)].map((_, i) => {\n          if (i % 5 !== 0) {\n            const angle = (i * 6 - 90) * (Math.PI / 180);\n            return (\n              <div\n                key={`tick-${i}`}\n                className=\"absolute w-1 h-1 bg-gray-500 rounded-full\"\n                style={{\n                  left: `${50 + 48 * Math.cos(angle)}%`,\n                  top: `${50 + 48 * Math.sin(angle)}%`,\n                  transform: \"translate(-50%, -50%)\",\n                }}\n              />\n            );\n          }\n          return null;\n        })}\n\n        {/* Manecilla de la hora */}\n        <div\n          className=\"absolute w-1 h-16 bg-black rounded-full origin-bottom left-1/2 -translate-x-1/2 bottom-1/2\"\n          style={{ transform: `translateX(-50%) rotate(${hourDegrees}deg)` }}\n        />\n\n        {/* Manecilla del minuto */}\n        <div\n          className=\"absolute w-1 h-24 bg-blue-600 rounded-full origin-bottom left-1/2 -translate-x-1/2 bottom-1/2\"\n          style={{ transform: `translateX(-50%) rotate(${minuteDegrees}deg)` }}\n        />\n\n        {/* Centro del reloj */}\n        <div className=\"absolute w-4 h-4 bg-gray-800 rounded-full left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2\" />\n      </div>\n\n      {mode === \"digital\" ? (\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"12\"\n            value={userHour}\n            onChange={(e) => setUserHour(e.target.value)}\n            className=\"w-16 p-2 border border-gray-300 rounded text-center\"\n            placeholder=\"Hora\"\n          />\n          <span className=\"text-xl\">:</span>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            step=\"5\"\n            value={userMinute}\n            onChange={(e) => setUserMinute(e.target.value)}\n            className=\"w-16 p-2 border border-gray-300 rounded text-center\"\n            placeholder=\"Min\"\n          />\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-2 gap-2 w-full max-w-sm mb-4\">\n          {verbalOptions.map((option, index) => (\n            <button\n              key={index}\n              onClick={() => setUserVerbalAnswer(option)}\n              className={`p-2 border rounded text-center ${\n                userVerbalAnswer === option\n                  ? \"bg-blue-200 border-blue-500\"\n                  : \"bg-white\"\n              }`}\n            >\n              {option}\n            </button>\n          ))}\n        </div>\n      )}\n\n      <div className=\"flex space-x-2 mb-4\">\n        <button\n          onClick={checkAnswer}\n          className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\"\n        >\n          Comprobar\n        </button>\n        <button\n          onClick={showCorrectAnswer}\n          className=\"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600\"\n        >\n          Ver respuesta\n        </button>\n        <button\n          onClick={newQuestion}\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n        >\n          Nueva hora\n        </button>\n      </div>\n\n      <p\n        className={`text-lg font-semibold ${\n          feedback.includes(\"Correcto\")\n            ? \"text-green-600\"\n            : feedback\n            ? \"text-red-600\"\n            : \"\"\n        }`}\n      >\n        {feedback}\n      </p>\n\n      {showAnswer && (\n        <p className=\"text-blue-600 font-medium\">\n          {mode === \"digital\"\n            ? `La hora es: ${hour}:${minute.toString().padStart(2, \"0\")}`\n            : `La hora es: \"${getVerbalTime(hour, minute)}\"`}\n        </p>\n      )}\n\n      <div className=\"mt-4 p-2 bg-gray-100 rounded w-full text-center\">\n        <p className=\"font-medium\">\n          Puntuación: {score}/{totalAttempts}\n        </p>\n        <p className=\"text-sm text-gray-600\">\n          Modo:{\" \"}\n          {mode === \"digital\"\n            ? \"Digital (00:00)\"\n            : \"Verbal (en punto, y media...)\"}\n        </p>\n      </div>\n\n      <div className=\"mt-4 p-2 bg-white border border-gray-200 rounded w-full text-sm\">\n        <h3 className=\"font-bold mb-1\">Instrucciones:</h3>\n        <ul className=\"list-disc pl-5\">\n          <li>Modo Digital: Introduce la hora y minutos exactos.</li>\n          <li>\n            Modo Verbal: Selecciona la expresión que mejor describa la hora del\n            reloj.\n          </li>\n          <li>Nivel 1: Solo horas exactas (3:00)</li>\n          <li>Nivel 2: Horas exactas y medias (4:00, 4:30)</li>\n          <li>Nivel 3: Intervalos de 5 minutos (5:05, 5:10, etc.)</li>\n          <li>\n            Nivel 4: Cuartos y medias para práctica verbal (en punto, y media, y\n            cuarto, menos cuarto)\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"names":["ClockLearningApp","hour","setHour","useState","Math","floor","random","minute","setMinute","userHour","setUserHour","userMinute","setUserMinute","feedback","setFeedback","showAnswer","setShowAnswer","score","setScore","totalAttempts","setTotalAttempts","level","setLevel","mode","setMode","userVerbalAnswer","setUserVerbalAnswer","verbalOptions","setVerbalOptions","hourDegrees","minuteDegrees","getVerbalTime","h","m","generateVerbalOptions","options","length","newHour","newMinute","newOption","includes","push","sort","newQuestion","changeLevel","newLevel","setTimeout","changeMode","newMode","useEffect","_jsxs","className","children","_jsx","onClick","Array","map","_","i","num","angle","PI","cos","sin","style","left","top","transform","type","min","max","value","onChange","e","target","placeholder","step","option","index","checkAnswer","parseInt","correctVerbal","showCorrectAnswer","toString","padStart"],"sourceRoot":""}